@model PagedList.IPagedList<GroupProject.Models.Product>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Browse Products";
}

<link href="~/Content/Site.css" rel="stylesheet" />

<link rel="canonical" href="https://getbootstrap.com/docs/5.0/examples/pricing/">

@*<script src="~/Scripts/jquery-3.4.1.min.js" type="text/javascript"></script>*@

<script type="text/javascript">

    $(function () {
        // Document.ready -> link up remove event handler
        $(".AddLink").click(function () {
            // Get the id from the link
            var productToAdd = $(this).attr("data-id");
            if (productToAdd != '') {
                // Perform the ajax post
                var url = '@Url.Action("AddToCartJson", "ShoppingCart")';
                $.post(url, { "id": productToAdd }, function (data) {
                    // Successful requests get here
                    // Update the page elements
                    if (data.ItemCount == 1) {
                        $('#cart-items #added-items').after('<tr id="row-' + data.AddId + '"><td>' + '<a href="@Url.Action("Details", "Products")">' + data.Name + '</a>' + '</td><td>' + Number(data.Price).toFixed(2) + '€</td><td id="item-count-' + data.AddId + '">1</td><td><a href="javascript:void(0);" class="RemoveLink" onclick="RemoveItem(' + data.AddId + ')" data-id="' + data.AddId + '">Remove from cart</a></td></tr>');
                    } else {
                        $('#item-count-' + data.AddId).text(data.ItemCount);
                    }
                    $('#cart-total').text(Number(data.CartTotal).toFixed(2) + '€');
                    $('#cart-status').text('Cart (' + data.CartCount + ')');
                });
            }
        });
    });
    function handleUpdate() {
        // Load and deserialize the returned JSON data
        var json = context.get_data();
        var data = Sys.Serialization.JavaScriptSerializer.deserialize(json);
    }

</script>

@*<main class="container">
    <div class="pricing-header px-3 py-3 pt-md-5 pb-md-4 mx-auto text-center">
        <h1 class="display-4">Products</h1>
        <hr />
    </div>*@


<div class="container-fluid mx-auto text-center">
    @if (ViewBag.IsAdminOrEmployee)
    {
        <p>
            @Html.ActionLink("Edit Product Categories", "Index", "Categories", "", new { @class = "btn btn-warning" })  &nbsp;
            @Html.ActionLink("Edit Product Manufacturers", "Index", "Manufacturers", "", new { @class = "btn btn-warning" }) &nbsp;
            @Html.ActionLink("Create New Product", "Create", "Products", "", new { @class = "btn btn-warning" })
        </p>}

    @using (Html.BeginForm("Index", "Products", FormMethod.Get))
    {
        <div class="SearchBox">
            <form>
                <div class="row d-flex justify-content-center">
                    @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, null, new { @class = "form-control col-sm", @placeholder = "Type here" })&nbsp;
                    @Html.DropDownList("SelectedCategory", null, "Category", new { @class = "form-control col-sm", onchange = "this.form.submit();" })&nbsp;
                    @Html.DropDownList("SelectedManufacturer", null, "Manufacturer", new { @class = "form-control col-sm", onchange = "this.form.submit(); " })&nbsp;
                </div>
                <br />
                <input type="submit" value="Search" class="btn btn-success btn-sm" />
            </form>
        </div>}
</div>
<br />
<p style="text-align:center">
    @Html.ActionLink("Sort by Price", "Index", new
    {
        sortOrder = ViewBag.SortParam,
        searchString = ViewBag.CurrentFilter,
        selectedCategory = ViewBag.CurrentCategory,
        selectedManufacturer = ViewBag.CurrentManufacturer
    }, new { @class = "hyperlink" })
    @if (ViewBag.Descending)
    {
        @:(Currently Descending)
    }
    else
    {
        @:(Currently Ascending)
    }
</p>

@if (ViewBag.ItemCount == 0)
{
    <h3>Oops, we didn't find any of the products you're looking for :(</h3>
}
else
{
    <p>Showing @ViewBag.ItemCount items</p>
}

<div class="row" id="productGrid">
    @foreach (var item in Model)
    {
        <div class="col-lg-3 col-md-4 col-sm-6">
            <div class="product-grid">
                <div class="product-image">
                    <a href='@Url.Action("Details", "Products", new { id = item.ID })'>
                        <img src="@Url.Content(item.ProductImage)" alt="Image" class="pic-1" />
                        @*<img src="@Url.Content(item.ProductPic2)" alt="Image" class="pic-2" />*@
                    </a>
                    @if (ViewBag.IsUser)
                    {
                        <ul class="social">
                            <li>
                                <a href="javascript:void(0);" class="AddLink" data-id="@item.ID">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" fill="currentColor" class="bi bi-cart4" viewBox="0 0 18 18">
                                        <path d="M0 2.5A.5.5 0 0 1 .5 2H2a.5.5 0 0 1 .485.379L2.89 4H14.5a.5.5 0 0 1 .485.621l-1.5 6A.5.5 0 0 1 13 11H4a.5.5 0 0 1-.485-.379L1.61 3H.5a.5.5 0 0 1-.5-.5zM3.14 5l.5 2H5V5H3.14zM6 5v2h2V5H6zm3 0v2h2V5H9zm3 0v2h1.36l.5-2H12zm1.11 3H12v2h.61l.5-2zM11 8H9v2h2V8zM8 8H6v2h2V8zM5 8H3.89l.5 2H5V8zm0 5a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0zm9-1a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0z" />
                                    </svg>
                                </a>
                            </li>
                        </ul>
                    }
                    @if (item.Offer == true)
                    {
                        <span class="product-new-label">Sale</span>
                        <span class="product-discount-label">-@Html.DisplayFor(Model => item.Discount)</span>
                    }
                </div>

                <div class="product-content">
                    <ul class="rating">

                        @{
                            if (item.Ratings.Where(x => x.IsApproved == true).ToList().Count > 0)
                            {
                                int sumAvg = Convert.ToInt32((from x in item.Ratings.Where(x => x.IsApproved == true) select x.Stars).Average());
                                for (var i = 1; i <= sumAvg; i++)
                                {
                                    <li class="starOn"></li>
                                }
                                for (var i = sumAvg; i < 5; i++)
                                {
                                    <li class="starOff"></li>
                                }
                            }
                            else
                            {
                                <li>No rating yet</li>
                            }
                        }
                    </ul>
                    <h3 class="title">@item.Manufacturer.Name @item.Name</h3>
                    <div class="price">
                        @item.Price€
                        @if (item.Offer == true)
                        {
                            <span class="badge badge-warning">@item.OldPrice€</span>
                        }
                    </div>
                </div>
            </div>
            <hr />
        </div>
    }
</div>

    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

    @Html.PagedListPager(Model, page => Url.Action("Index",
        new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, selectedCategory = ViewBag.CurrentCategory, selectedManufacturer = ViewBag.CurrentManufacturer }))